<!--Filter - Search - Paging-->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var url = new URL(window.location.href);

        //Filter
        var authorFilter = document.getElementById("author-filter");
        var categoryFilter = document.getElementById("category-filter");
        var publisherFilter = document.getElementById("publisher-filter");

        authorFilter.addEventListener("change", function () {
            filterTable();
        });

        categoryFilter.addEventListener("change", function () {
            filterTable();
        });

        publisherFilter.addEventListener("change", function () {
            filterTable();
        });

        function filterTable() {
            url.searchParams.delete("page");
            url.searchParams.delete("authorId");
            url.searchParams.delete("categoryId");
            url.searchParams.delete("publisherId");

            if (authorFilter.value !== "") {
                url.searchParams.set("authorId", authorFilter.value);
            }

            if (categoryFilter.value !== "") {
                url.searchParams.set("categoryId", categoryFilter.value);
            }

            if (publisherFilter.value !== "") {
                url.searchParams.set("publisherId", publisherFilter.value);
            }

            window.history.replaceState({}, '', url);
            window.location.reload();
        }

        //Paging
        var page = @ViewData["Page"];
        var btnPrePage = document.getElementById("pre-page");
        var btnNextPage = document.getElementById("next-page");

        if (page != 1) {
            btnPrePage.disabled = false;
        }
        if(page != @ViewData["PageCount"]){
            btnNextPage.disabled = false;
        }

        btnPrePage.addEventListener("click", function () {
            url.searchParams.set("page", --page);
            window.history.replaceState({}, '', url);
            window.location.reload();
        });

        btnNextPage.addEventListener("click", function () {
            url.searchParams.set("page", ++page);

            window.history.replaceState({}, '', url);
            window.location.reload();
        });

        //Search
        var searchTerm = document.getElementById("searchTerm");
        var searchType = document.getElementById("searchType");
        var btnSearch = document.getElementById("btnSearch");
        searchTerm.addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                url.searchParams.set("searchTerm", searchTerm.value);
                url.searchParams.set("searchType", searchType.value);
                window.location.replace(url.toString());
            }
        });
        btnSearch.addEventListener("click", function () {
            url.searchParams.set("searchTerm", searchTerm.value);
            url.searchParams.set("searchType", searchType.value);
            window.location.replace(url.toString());
        });

        //Sort
        var titleSort = document.getElementById("titleSort");
        if (@ViewData["SortType"] == 1) {
            titleSort.innerHTML = "A-Z";
        }
        else if(@ViewData["SortType"] == -1){
            titleSort.innerHTML = "Z-A";
        }
        titleSort.addEventListener("click", function () {
            if (titleSort.innerHTML == "A-Z") {
                titleSort.innerHTML = "Z-A";
                url.searchParams.set("sortType", -1)
            } else {
                titleSort.innerHTML = "A-Z";
                url.searchParams.set("sortType", 1)
            }

            window.history.replaceState({}, '', url);
            window.location.reload();
        });
    });
</script>

<!--Scroll table-->
<style>
    .scrollable-table-wrapper {
        overflow-x: auto;
        white-space: nowrap;
    }

    .scrollable-table {
        border-collapse: collapse;
        width: 100%;
    }

        .scrollable-table th,
        .scrollable-table td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
</style>



@model IEnumerable<WEB.Models.Book>

@{
    ViewData["Title"] = "Book Manager";
    var authors = ViewData["Authors"] as IEnumerable<Author>;
    var categories = ViewData["Categories"] as IEnumerable<Category>;
    var publishers = ViewData["Publishers"] as IEnumerable<Publisher>;
    int authorId = (int?)ViewData["AuthorId"] ?? 0;
    int categoryId = (int?)ViewData["CategoryId"] ?? 0;
    int publisherId = (int?)ViewData["PublisherId"] ?? 0;

}

<div class="text-center"><h1 class="display-4">@ViewData["Title"]</h1></div>

<div class="row">
    <a href="@Url.Action("Create")" class="btn btn-primary" style="width:auto;">Create New Book</a>
    <div style="width: 20%;"></div>
    <select id="searchType" class="rounded-pill" style="width: auto;">
        <option value="1">ISBN</option>
        <option value="2"></option>
    </select>

    <input id="searchTerm" style="width: 20%; margin: 0 1%;" class="rounded-pill" type="text" value=@ViewData["SearchTerm"] />
    <button id="btnSearch" style="width:auto;" class="btn btn-primary">Search</button>
</div>

<br />

<div class="row" style="margin-bottom: 20px;">
    <h5 style="width: auto; display: flex; align-items: center; justify-content: center;">Filtered Information: </h5>
    <div id="filtered-info" style="border: 1px solid black; border-radius: 10px;  width: auto; background-color: lightgray; display: flex; align-items: center;">
        <b>@ViewData["FilteredInfo"]</b>
    </div>
    <a asp-controller="Books" asp-action="Manager" style="width: auto; margin-left: 20px;" class="btn btn-primary">Clear</a>
</div>



<div class="scrollable-table-wrapper">
    <table class="scrollable-table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Id)</th>
                <th>
                    <select style="width: auto;" id="author-filter" class="form-control">
                        <option value="">All Authors</option>
                        @if (authors != null)
                            @foreach (var author in authors)
                            {
                                if (author.Id == authorId)
                                {
                                    <option value="@author.Id" selected>@author.Name</option>
                                }
                                else
                                {
                                    <option value="@author.Id">@author.Name</option>
                                }
                            }
                    </select>
                </th>
                <th>
                    <select style="width: auto;" id="category-filter" class="form-control">
                        <option value="">All Categories</option>
                        @if (categories != null)
                            foreach (var category in categories)
                            {
                                if (category.Id == categoryId)
                                {
                                    <option value="@category.Id" selected>@category.Name</option>
                                }
                                else
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            }
                    </select>
                </th>
                <th>
                    <select style="width: auto;" id="publisher-filter" class="form-control">
                        <option value="">All Publishers</option>
                        @if (publishers != null)
                        {
                            foreach (var publisher in publishers)
                            {
                                if (publisher.Id == publisherId)
                                {
                                    <option value="@publisher.Id" selected>@publisher.Name</option>
                                }
                                else
                                {
                                    <option value="@publisher.Id">@publisher.Name</option>
                                }
                            }
                        }
                    </select>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                    <button id="titleSort">Sort</button>
                </th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.ISBN)</th>
                <th>@Html.DisplayNameFor(model => model.PublishYear)</th>
                <th>@Html.DisplayNameFor(model => model.Price)</th>
                <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                <th>@Html.DisplayNameFor(model => model.Language)</th>
                <th>@Html.DisplayNameFor(model => model.PageCount)</th>
                <th>@Html.DisplayNameFor(model => model.Edition)</th>
                <th>@Html.DisplayNameFor(model => model.CoverImagePath)</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td>@Html.DisplayFor(modelItem => item.Author!.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Category!.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Publisher!.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>
                        <button class="btn btn-primary" data-toggle="modal" data-target="#descModal-@item.Id">Show Description</button>
                        <div class="modal fade" id="descModal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title" id="myModalLabel">Description</h4>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body" style="white-space: normal;">
                                        @item.Description
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.ISBN)</td>
                    <td>@Html.DisplayFor(modelItem => item.PublishYear)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                    <td>@Html.DisplayFor(modelItem => item.Language)</td>
                    <td>@Html.DisplayFor(modelItem => item.PageCount)</td>
                    <td>@Html.DisplayFor(modelItem => item.Edition)</td>
                    <td>
                        <button class="btn btn-primary" data-toggle="modal" data-target="#imageModal-@item.Id">Show Image</button>
                        <div class="modal fade" id="imageModal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title" id="myModalLabel">@item.Title</h4>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <img style="height: 300px; display: block; margin: 0 auto;" src="/book-cover-img/@Url.Content(item.CoverImagePath)" alt="@item.Title">
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-primary">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="page-container" style="text-align: center; margin-top: 20px;">
    <button id="pre-page" disabled class="btn btn-primary">previous</button>
    <span id="cur-page" style="margin: 0 1%;"><b>@ViewData["Page"]</b></span>
    <button id="next-page" disabled class="btn btn-primary">next</button>
    <span id="page-count" style="float: right;font-size: 20px;"><b>Total Pages: @ViewData["PageCount"]</b></span>
</div>